// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eShop.DataLayer;

#nullable disable

namespace eShop.DataLayer.Migrations
{
    [DbContext(typeof(eShopContext))]
    partial class eShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Manufacture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("ImageId")
                        .IsUnique()
                        .HasFilter("[ImageId] IS NOT NULL");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 1,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 2,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 2,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 3,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 3,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 4,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 4,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 5,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 5,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 6,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 6,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 7,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 7,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 8,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 8,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 9,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 9,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 10,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 10,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 11,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 11,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 12,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 12,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 13,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 13,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 14,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 14,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 15,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 15,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 16,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 16,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 17,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 17,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 18,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 18,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 19,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 19,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 20,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 20,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 21,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 21,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 22,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 22,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 23,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 23,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 24,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 24,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 25,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 25,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 26,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 26,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 27,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 27,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 28,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 28,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 29,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 29,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        },
                        new
                        {
                            ProductId = 30,
                            Description = "Action role-playing game with fast-paced real-time combat and an isometric graphics engine. The game utilizes classic dark fantasy elements and players assume the role of a heroic character charged with saving the world of Sanctuary from the forces of Hell.",
                            ImageId = 30,
                            Manufacture = "Blizzard",
                            Price = 69.989999999999995,
                            Stock = 100,
                            Title = "Diablo III"
                        });
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Accion"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Platform"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Survival"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Race"
                        },
                        new
                        {
                            CategoryId = 5,
                            Name = "Horror"
                        },
                        new
                        {
                            CategoryId = 6,
                            Name = "Maximus Prime"
                        },
                        new
                        {
                            CategoryId = 7,
                            Name = "18+"
                        });
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZipCodeId")
                        .HasColumnType("int");

                    b.HasKey("CustomerID");

                    b.HasIndex("ZipCodeId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            Address = "Admin",
                            Email = "admin@admin.com",
                            Firstname = "Admin",
                            IsAdmin = true,
                            IsDeleted = false,
                            Lastname = "Admin",
                            Password = "admin",
                            ZipCodeId = 1050
                        });
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<string>("DefaultText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ImageId = 1,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 2,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 3,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 4,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 5,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 6,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 7,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 8,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 9,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 10,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 11,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 12,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 13,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 14,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 15,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 16,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 17,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 18,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 19,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 20,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 21,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 22,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 23,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 24,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 25,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 26,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 27,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 28,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 29,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        },
                        new
                        {
                            ImageId = 30,
                            DefaultText = "Image not load",
                            ImgPath = "/Images/diablo-3-pc-20394.png"
                        });
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.JoinerTables.CategoryProducts", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("CategoryProducts");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 4
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 5
                        },
                        new
                        {
                            CategoryId = 6,
                            ProductId = 6
                        },
                        new
                        {
                            CategoryId = 7,
                            ProductId = 7
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 8
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 9
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 10
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 11
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 12
                        },
                        new
                        {
                            CategoryId = 6,
                            ProductId = 13
                        },
                        new
                        {
                            CategoryId = 7,
                            ProductId = 14
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 15
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 16
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 17
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 18
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 19
                        },
                        new
                        {
                            CategoryId = 6,
                            ProductId = 20
                        },
                        new
                        {
                            CategoryId = 7,
                            ProductId = 21
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 22
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 23
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 24
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 25
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 26
                        },
                        new
                        {
                            CategoryId = 6,
                            ProductId = 27
                        },
                        new
                        {
                            CategoryId = 7,
                            ProductId = 28
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 29
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 30
                        });
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.JoinerTables.OrderCustomer", b =>
                {
                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("OrdersId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("OrderCustomer");
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.JoinerTables.OrderProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "OrdersId");

                    b.HasIndex("OrdersId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.Orders", b =>
                {
                    b.Property<int>("OrdersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdersId"));

                    b.Property<DateTime>("BuyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PayOptionsId")
                        .HasColumnType("int");

                    b.HasKey("OrdersId");

                    b.HasIndex("PayOptionsId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.PayOptions", b =>
                {
                    b.Property<int>("PayOptionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayOptionsId"));

                    b.Property<string>("PayOptionsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PayOptionsId");

                    b.ToTable("PayOptions");
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.ZipCode", b =>
                {
                    b.Property<int>("ZipCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZipCodeId"));

                    b.Property<string>("ZipCodeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZipCodeId");

                    b.ToTable("ZipCodes");

                    b.HasData(
                        new
                        {
                            ZipCodeId = 1050,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1051,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1052,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1053,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1054,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1055,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1056,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1057,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1058,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1059,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1060,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1061,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1062,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1063,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1064,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1065,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1066,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1067,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1068,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1069,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1070,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1071,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1072,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1073,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1074,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1100,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1101,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1102,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1103,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1104,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1105,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1106,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1107,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1110,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1111,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1112,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1113,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1114,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1115,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1116,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1117,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1118,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1119,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1120,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1121,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1122,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1123,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1124,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1125,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1126,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1127,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1128,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1129,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1130,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1131,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1150,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1151,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1152,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1153,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1154,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1155,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1156,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1157,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1158,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1159,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1160,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1161,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1162,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1164,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1165,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1166,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1167,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1168,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1169,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1170,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1171,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1172,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1173,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1174,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1175,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1200,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1201,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1202,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1203,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1204,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1205,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1206,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1207,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1208,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1209,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1210,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1211,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1212,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1213,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1214,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1215,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1216,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1218,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1219,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1220,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1221,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1250,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1251,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1252,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1253,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1254,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1255,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1256,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1257,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1259,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1260,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1261,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1263,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1264,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1265,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1266,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1267,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1268,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1270,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1271,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1300,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1301,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1302,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1303,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1304,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1306,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1307,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1308,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1309,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1310,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1311,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1312,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1313,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1314,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1315,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1316,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1317,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1318,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1319,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1320,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1321,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1322,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1323,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1324,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1325,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1326,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1327,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1328,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1329,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1350,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1352,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1353,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1354,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1355,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1356,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1357,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1358,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1359,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1360,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1361,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1362,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1363,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1364,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1365,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1366,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1367,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1368,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1369,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1370,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1371,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1400,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1401,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1402,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1403,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1406,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1407,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1408,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1409,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1410,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1411,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1412,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1413,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1414,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1415,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1416,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1417,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1418,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1419,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1420,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1421,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1422,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1423,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1424,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1425,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1426,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1427,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1428,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1429,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1430,
                            ZipCodeName = "København K"
                        },
                        new
                        {
                            ZipCodeId = 1432,
                            ZipCodeName = "København K"
                        });
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.HasOne("eShop.DataLayer.Entities.Image", "Image")
                        .WithOne("Product")
                        .HasForeignKey("Product", "ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.Customer", b =>
                {
                    b.HasOne("eShop.DataLayer.Entities.ZipCode", "ZipCode")
                        .WithMany("Customers")
                        .HasForeignKey("ZipCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZipCode");
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.JoinerTables.CategoryProducts", b =>
                {
                    b.HasOne("eShop.DataLayer.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Product", "Products")
                        .WithMany("Category")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.JoinerTables.OrderCustomer", b =>
                {
                    b.HasOne("eShop.DataLayer.Entities.Customer", "Customers")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eShop.DataLayer.Entities.Orders", "Orders")
                        .WithMany("Customers")
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.JoinerTables.OrderProduct", b =>
                {
                    b.HasOne("eShop.DataLayer.Entities.Orders", "Orders")
                        .WithMany("Products")
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Product", "Products")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.Orders", b =>
                {
                    b.HasOne("eShop.DataLayer.Entities.PayOptions", "PayOptions")
                        .WithMany("Orders")
                        .HasForeignKey("PayOptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PayOptions");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Navigation("Category");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.Image", b =>
                {
                    b.Navigation("Product")
                        .IsRequired();
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.Orders", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.PayOptions", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("eShop.DataLayer.Entities.ZipCode", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
