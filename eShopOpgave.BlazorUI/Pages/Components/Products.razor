@inject IProductAPIServices _productServices
@inject NavigationManager _navigationManager
@inject IToastService _toastService

<h3>Products</h3>

<button @onclick='() => _navigationManager.NavigateTo($"/CreateProduct")'>Create Product</button>
<body>
    <main class="row gx-2 gy-3 ms-1">
        @foreach (var item in products.items)
        {
            <div class="d-inline-flex col-3">
                <div class="card shadow-sm border-dark ">
                    <img src="@item.imgPath" class="border-dark" width="290" height="290">
                    <div class="card-body border-dark">
                        <div>
                            <p class="card-title">@item.title</p>
                            <small class="float-end">@item.price.-</small>
                        </div>
                        <p class="card-text text-truncate" style="max-width: 250px;">@item.description</p>
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="btn-group ms-4">
                                <form method="post">
                                    <button type="submit" class="btn btn-sm btn-outline-success" asp-route-productId="@item.masterKey">Add Cart</button>
                                </form>
                                <button type="button" class="btn btn-sm btn-outline-dark ms-4">See more</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </main>
</body>
@code {
    private ProductsBase products = new();


    protected override async Task OnInitializedAsync()
    {
        products = await _productServices.GetAllProducts(1, 20);
    }
}
