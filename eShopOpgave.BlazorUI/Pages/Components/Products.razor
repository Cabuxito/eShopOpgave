@page "/products"
@using eShopOpgave.BlazorUI.Pages.Components;
@inject IProductAPIServices _productServices
@inject NavigationManager _navigationManager
@inject IToastService _toastService

<form class="d-flex">
    <input class="form-control me-1" type="search" placeholder="Search" aria-label="Search" @bind-value="SearchString">
    <button class="btn btn-primary" type="submit" @onclick="Search">Search</button>
</form>

<h2 class="card-title mt-3 mb-5 text-center">Products</h2>


<body>
    <main class="row gx-2 gy-3 ms-1">
        @foreach (var item in products.items)
        {
            <div class="d-inline-flex col-3">
                <div class="card shadow-sm border-dark ">
                    <img src="@item.imgPath" class="border-dark" width="290" height="290">
                    <div class="card-body border-dark">
                        <div>
                            <p class="card-title">@item.title</p>
                            <small class="float-end">@item.price.-</small>
                        </div>
                        <p class="card-text text-truncate" style="max-width: 250px;">@item.description</p>
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="btn-group ms-4">
                                <form method="post">
                                    <button type="submit" class="btn btn-sm btn-outline-success" asp-route-productId="@item.masterKey">Add Cart</button>
                                </form>
                                <button type="button" class="btn btn-sm btn-outline-dark ms-4" @*@onclick='@(() => modal.Show<ProductDescription>("updateProduct", new ModalParameters().Add(nameof(Update.id), item.masterKey)))'*@>See more</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="d-flex justify-content-center">
            <ul class="pagination">
                <li class=@(currentPage == 1 ? "page-item disabled" : "page-item")><a class="page-link" @onclick="PreviousPage">Previous</a></li>
                @for (var i = 1; i <= totalPages; i++)
                {
                    <li class="@(i == currentPage ? "page-item active" : "")"><a class="page-item">@i</a></li>
                }
                <li class=@(totalPages == currentPage ? "page-item disabled" : "page-item")><a class="page-link" @onclick="NextPage">Next</a></li>
            </ul>
        </div>
    </main>
</body>

@code {
    [CascadingParameter] public IModalService modal { get; set; } = default!;
    private ProductsBase products = new();
    private int count = 8;
    private int pages;
    private int currentPage = 1;
    private int totalPages => (int)Math.Ceiling(decimal.Divide(pages, count));
    private string? SearchString;

    protected override async Task OnInitializedAsync()
    {
        products = await _productServices.GetAllProducts(currentPage, count);
    }

    private async Task NextPage()
    {
        products = await _productServices.GetAllProducts(++currentPage, count);
    }

    private async Task PreviousPage()
    {
        products = await _productServices.GetAllProducts(--currentPage, count);
    }

    public async Task Search()
    {
        if (!string.IsNullOrEmpty(SearchString))
        {
            products = await _productServices.Search(SearchString);
             StateHasChanged();
        }
        else
        {
            products = await _productServices.GetAllProducts(currentPage, count);
        }
    }
}
